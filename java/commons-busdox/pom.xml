<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>at.peppol</groupId>
    <artifactId>parent-pom</artifactId>
    <version>14-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>peppol-commons-busdox</artifactId>
  <version>2.3.0-SNAPSHOT</version>
  <name>peppol-commons-busdox</name>

  <scm>
    <connection>scm:svn:http://peppol-silicone.googlecode.com/svn/trunk/java/commons-busdox</connection>
    <developerConnection>scm:svn:https://peppol-silicone.googlecode.com/svn/trunk/java/commons-busdox</developerConnection>
  </scm>
  
  <dependencies>
    <dependency>
      <groupId>com.phloc</groupId>
      <artifactId>phloc-commons</artifactId>
      <version>3.6.0</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jvnet.jax-ws-commons</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <!-- Use one execution per WSDL file, as the wsdlLocation can specify only one file at a time. The wsdlLocation 
            is the location how the WSDL file will be referenced in the code (using class.getResource). Also important: use a different 
            stale file for each WSDL file! Also important: path must be "/WEB-INF/wsdl" because this is how the deployment descriptor 
            needs it. It must be absolute because class.getResource is used and we therefore need an asbolute path! -->
          <execution>
            <id>wsimport1</id>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <configuration>
              <wsdlFiles>
                <wsdlFile>ManageBusinessIdentifierService-1.0.wsdl</wsdlFile>
              </wsdlFiles>
              <wsdlLocation>/WEB-INF/wsdl/ManageBusinessIdentifierService-1.0.wsdl</wsdlLocation>
              <staleFile>${project.build.directory}/stale/.stale-wsimport1</staleFile>
            </configuration>
          </execution>
          <execution>
            <id>wsimport2</id>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <configuration>
              <wsdlFiles>
                <wsdlFile>ManageServiceMetadataService-1.0.wsdl</wsdlFile>
              </wsdlFiles>
              <wsdlLocation>/WEB-INF/wsdl/ManageServiceMetadataService-1.0.wsdl</wsdlLocation>
              <staleFile>${project.build.directory}/stale/.stale-wsimport2</staleFile>
            </configuration>
          </execution>
          <execution>
            <id>wsimport3</id>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <configuration>
              <wsdlFiles>
                <wsdlFile>peppol-start-2.0.wsdl</wsdlFile>
              </wsdlFiles>
              <wsdlLocation>/WEB-INF/wsdl/peppol-start-2.0.wsdl</wsdlLocation>
              <staleFile>${project.build.directory}/stale/.stale-wsimport3</staleFile>
              <extension>true</extension>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <wsdlDirectory>src/main/resources/WEB-INF/wsdl</wsdlDirectory>
          <bindingDirectory>src/main/jaxb</bindingDirectory>
          <!-- We need to use the same output directory as the JAXB call, 
               because both wsimport and JAXB are creating code for the 
               Identifiers-x.y.xsd file! -->
          <sourceDestDir>target/generated-sources/xjc</sourceDestDir>
          <xjcArgs>
            <xjcArg>-no-header</xjcArg>
            <!-- 
            <xjcArg>-extension</xjcArg>
            <xjcArg>-episode</xjcArg>
             -->
          </xjcArgs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-tools</artifactId>
            <version>2.2.6-2</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Additional JAXB plugin for all XSDs not covered in the WSDLs
           Note: if executing this step fails, you don't have the Metro library
           webservices-api.jar in your endorsed directory! 
      -->
      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb2-plugin</artifactId>
        <version>0.8.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <specVersion>2.2</specVersion>
          <schemaDirectory>src/main/resources/WEB-INF/wsdl</schemaDirectory>
          <schemaIncludes>
            <schemaInclude>oasis-200401-wss-wssecurity-utility-1.0.xsd</schemaInclude>
            <schemaInclude>LIME-Types-1.0.xsd</schemaInclude>
            <schemaInclude>START-Types-1.0.xsd</schemaInclude>
            <schemaInclude>ServiceGroupReferenceList.xsd</schemaInclude>
          </schemaIncludes>
          <bindingDirectory>src/main/jaxb</bindingDirectory>
          <!-- Required for schema component designator in binding file -->
          <extension>true</extension>
          <forceRegenerate>true</forceRegenerate>
          <args>
            <arg>-Xinheritance</arg>
          </args>
          <plugins>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics</artifactId>
              <version>0.6.3</version>
            </plugin>
          </plugins>
        </configuration>
        <dependencies>
          <!-- For maven-jaxb22-plugin 0.8.0 use JAXB 2.2.4-1
               0.8.1 uses 2.2.5-b10 which has some weird WS Adressing special handling!
           -->
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>2.2.4-1</version>
          </dependency>
          <!-- Required for correct entity resolving in paths with blanks! -->
          <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.10.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>src/main/resources/WEB-INF/wsdl/oasis-200401-wss-wssecurity-utility-1.0.xsd</exclude>
            <exclude>src/main/resources/WEB-INF/wsdl/ws-addr.xsd</exclude>
            <exclude>src/main/resources/WEB-INF/wsdl/xmldsig-core-schema.xsd</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagBase>https://peppol-silicone.googlecode.com/svn/tags/${project.name}</tagBase>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
