/**
 * Version: MPL 1.1/EUPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at:
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Copyright The PEPPOL project (http://www.peppol.eu)
 *
 * Alternatively, the contents of this file may be used under the
 * terms of the EUPL, Version 1.1 or - as soon they will be approved
 * by the European Commission - subsequent versions of the EUPL
 * (the "Licence"); You may not use this work except in compliance
 * with the Licence.
 * You may obtain a copy of the Licence at:
 * http://joinup.ec.europa.eu/software/page/eupl/licence-eupl
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and
 * limitations under the Licence.
 *
 * If you wish to allow use of your version of this file only
 * under the terms of the EUPL License and not to allow others to use
 * your version of this file under the MPL, indicate your decision by
 * deleting the provisions above and replace them with the notice and
 * other provisions required by the EUPL License. If you do not delete
 * the provisions above, a recipient may use your version of this file
 * under either the MPL or the EUPL License.
 */
package eu.peppol.registry.sml.datamodel;

import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.phloc.commons.annotations.DevelopersNote;

/**
 * AllowedWildcardSchemes generated by hbm2java
 *
 * @author PEPPOL.AT, BRZ, Philip Helger
 */
@Entity
@Table (name = "sml_allowed_wildcard_schemes")
public class DBAllowedWildcardSchemes implements Serializable {
  private DBAllowedWildcardSchemesID m_aID;
  private DBUser m_aUser;

  @Deprecated
  @DevelopersNote ("Used only by Hibernate")
  public DBAllowedWildcardSchemes () {}

  public DBAllowedWildcardSchemes (final DBAllowedWildcardSchemesID id, final DBUser user) {
    setId (id);
    setUser (user);
  }

  @EmbeddedId
  @AttributeOverrides ({ @AttributeOverride (name = "scheme", column = @Column (name = "scheme",
                                                                                nullable = false,
                                                                                length = 25)),
                        @AttributeOverride (name = "username", column = @Column (name = "username",
                                                                                 nullable = false,
                                                                                 length = 200)) })
  public DBAllowedWildcardSchemesID getId () {
    return m_aID;
  }

  public void setId (final DBAllowedWildcardSchemesID id) {
    m_aID = id;
  }

  @ManyToOne (fetch = FetchType.LAZY)
  @JoinColumn (name = "username", nullable = false, insertable = false, updatable = false)
  public DBUser getUser () {
    return m_aUser;
  }

  public void setUser (final DBUser user) {
    m_aUser = user;
  }
}
